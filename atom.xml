<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序员疯子的博客-Code is Art, Code is Poetry!</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://91fz.org/"/>
  <updated>2017-06-27T06:50:37.089Z</updated>
  <id>http://91fz.org/</id>
  
  <author>
    <name>Fengzijk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kotlin初探 集成springMvc</title>
    <link href="http://91fz.org/2017/06/01/kotlindemo/"/>
    <id>http://91fz.org/2017/06/01/kotlindemo/</id>
    <published>2017-05-31T16:00:00.000Z</published>
    <updated>2017-06-27T06:50:37.089Z</updated>
    
    <content type="html"><![CDATA[<p>自从Google I/O 大会上宣布 Kotlin 成为 Android 开发的官方语言，Kotlin 就吸引了很多人的目光，反正在家休息、研究了下，<br>整理成这篇博客来简单介绍下Kotlin。</p>
<h2 id="Kotlin的起源"><a href="#Kotlin的起源" class="headerlink" title="Kotlin的起源"></a><strong>Kotlin的起源</strong></h2><p>Kotlin是一个基于JVM的新的编程语言，由JetBrains开发。JetBrains，作为目前广受欢迎的Java IDE IntelliJ的提供商，在Apache许可下已经开源其Kotlin编程语言。与Java相比，Kotlin的语法更简洁、更具表达性，而且提供了更多的特性，比如，<strong>高阶函数</strong>、<strong>操作符重载</strong>、<strong>字符串模板</strong>。<strong>它与Java高度可互操作</strong>，而且还可以同时用在一个项目中。</p>
<h2 id="Kotlin与Java语言上的比较"><a href="#Kotlin与Java语言上的比较" class="headerlink" title="Kotlin与Java语言上的比较"></a>Kotlin与Java语言上的比较</h2><ul>
<li>函数式的：<strong>Kotlin</strong>是基于面向对象的语言。使用了很多函数式编程的概念，比如，<strong>使用lambda表达式来更方便地解决问题</strong>。其中一个很棒的特性就是<strong>Collections</strong>的处理方式。<strong>但是java 在8中也支持函数式编程，lamda表达式这些当然也不在话下了。</strong></li>
<li><strong>可以扩展函数</strong>：意味着我们可以扩展类的更多的特性，甚至我们没有权限去访问这个类中的代码。<br>例如，<strong>以下代码可以更简单的使用Toast</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">fun Activity.toast(message: CharSequence, duration: Int =  oast.LENGTH_SHORT)&#123;</div><div class="line">   Toast.makeText(this, message, duration).show()</div><div class="line">&#125;</div><div class="line"></div><div class="line">  Activity：表示函数的接收者，也就是函数扩展的对象</div><div class="line">  . ：扩展函数修饰符</div><div class="line">  toast：扩展函数的名称</div><div class="line">  (...)：扩展函数的参数，可以为null</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>高度互操作性的</strong>：可以继续使用所Java写的代码和库，因为两个语言之间的互操作性是完美的。甚至可以在项目中使用<strong>Kotlin</strong>和<strong>Java</strong>混合编程<br><img src="/images/kotlin/kotlin.png" alt="image">  </p>
<p>如上图，我们可以轻松的使用 Intellij IDEA 自带的代码转换把Java代码转换为Kotlin代码<br>Kotlin 的文件是 .kt 结尾，向 .kt 文件中粘贴 <strong>Java</strong> 代码时都能自动转化为 Kotlin 代码，这点让我想到了当初搞<strong>ZeroC-ice</strong>的ICE的中间语言slice，不过slice能可以根据你的需求翻译成各种常见的语言，不过数据类型转换却比较难（这不是本次的重点）。</p>
</li>
<li><p><strong>更加易表现</strong>：Kotlin最重要的优点之一。开发相同功能你可以少写很多的代码。<br>以下这个类是一个很常见的Java类，但是使用Kotlin可以节省很多代码量。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public class Student &#123;</div><div class="line">    private String name;//姓名</div><div class="line">    private int age;//年龄</div><div class="line">    private String hobby;//爱好</div><div class="line"></div><div class="line">    public String getName() &#123;</div><div class="line">        return name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setName(String name) &#123;</div><div class="line">        this.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getAge() &#123;</div><div class="line">        return age;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setAge(int age) &#123;</div><div class="line">        this.age = age;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getHobby() &#123;</div><div class="line">        return hobby;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setHobby(String hobby) &#123;</div><div class="line">        this.hobby = hobby;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用Kotlin达到同样的效果只需要一行代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">class Student(var name: String, var age: Int, var hobby: String)</div></pre></td></tr></table></figure>
<ul>
<li><strong>更加安全</strong>：<strong>Kotlin</strong>是空安全的，就是说在编译时期就处理了各种<strong>null</strong>的情况，避免了执行时异常。如果一个对象可以是<strong>null</strong>，则我们需要明确地指定它，然后在使之前检查是否是null。可以节约很多调试<strong>空指针</strong>的时间并解决相应的bug。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//普通的 String 类型的变量不能为空</div><div class="line">var str: String =&quot;abc&quot;</div><div class="line">str = null //编译错误</div><div class="line"></div><div class="line">-------------------------</div><div class="line"></div><div class="line">//允许为空，我们必须把它声明为可空的变量：</div><div class="line">var b: String? = &quot;abc&quot;</div><div class="line">b = null</div></pre></td></tr></table></figure>
<h2 id="使用Kotlin整合springMvc写了一个-web项目的demo"><a href="#使用Kotlin整合springMvc写了一个-web项目的demo" class="headerlink" title="使用Kotlin整合springMvc写了一个 web项目的demo"></a>使用Kotlin整合springMvc写了一个 web项目的demo</h2><ul>
<li>首先安装<strong>Kotlin</strong>的插件<br><img src="/images/kotlin/kotlin01.png" alt="image"><br>首先创建一个 <strong>Kotlin</strong> 项目，然后添加 <strong>Maven</strong> 组件<br><img src="/images/kotlin/kotlin02.png" alt="image"><br><img src="/images/kotlin/kotlin03.png" alt="image">   </li>
<li><strong>完成后项目结构如下</strong><br><img src="/images/kotlin/kotlin04.png" alt="image"><br>pom文件如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</div><div class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">  &lt;groupId&gt;kotlin&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;demo&lt;/artifactId&gt;</div><div class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class="line">  &lt;build&gt;</div><div class="line">    &lt;plugins&gt;</div><div class="line">      &lt;plugin&gt;</div><div class="line">        &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;</div><div class="line">        &lt;version&gt;$&#123;kotlin.version&#125;&lt;/version&gt;</div><div class="line">        &lt;executions&gt;</div><div class="line">          &lt;execution&gt;</div><div class="line">            &lt;id&gt;compile&lt;/id&gt;</div><div class="line">            &lt;phase&gt;process-sources&lt;/phase&gt;</div><div class="line">            &lt;goals&gt;</div><div class="line">              &lt;goal&gt;compile&lt;/goal&gt;</div><div class="line">            &lt;/goals&gt;</div><div class="line">            &lt;configuration&gt;</div><div class="line">              &lt;sourceDirs&gt;</div><div class="line">                &lt;source&gt;src/main/java&lt;/source&gt;</div><div class="line">              &lt;/sourceDirs&gt;</div><div class="line">            &lt;/configuration&gt;</div><div class="line">          &lt;/execution&gt;</div><div class="line">          &lt;execution&gt;</div><div class="line">            &lt;id&gt;test-compile&lt;/id&gt;</div><div class="line">            &lt;phase&gt;process-test-sources&lt;/phase&gt;</div><div class="line">            &lt;goals&gt;</div><div class="line">              &lt;goal&gt;test-compile&lt;/goal&gt;</div><div class="line">            &lt;/goals&gt;</div><div class="line">            &lt;configuration&gt;</div><div class="line">              &lt;sourceDirs&gt;&lt;/sourceDirs&gt;</div><div class="line">            &lt;/configuration&gt;</div><div class="line">          &lt;/execution&gt;</div><div class="line">        &lt;/executions&gt;</div><div class="line">      &lt;/plugin&gt;</div><div class="line">    &lt;/plugins&gt;</div><div class="line">  &lt;/build&gt;</div><div class="line">  &lt;packaging&gt;war&lt;/packaging&gt;</div><div class="line"></div><div class="line">  &lt;properties&gt;</div><div class="line">    &lt;kotlin.version&gt;1.1.2-4&lt;/kotlin.version&gt;</div><div class="line">    &lt;spring.version&gt;4.2.5.RELEASE&lt;/spring.version&gt;</div><div class="line">    &lt;jackson.version&gt;2.7.3&lt;/jackson.version&gt;</div><div class="line">  &lt;/properties&gt;</div><div class="line">  &lt;dependencies&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;4.12&lt;/version&gt;</div><div class="line">      &lt;scope&gt;test&lt;/scope&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line"></div><div class="line">    &lt;!-- spring依赖 --&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;spring-core&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;spring-web&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line"></div><div class="line">    &lt;!-- jackson作为controller层的json转换器 --&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;jackson.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;jackson.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;kotlin-stdlib&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;$&#123;kotlin.version&#125;&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">  &lt;/dependencies&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
<p>spring.xml 文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</div><div class="line">    &lt;context:component-scan base-package=&quot;com.timothy.web&quot;&gt;</div><div class="line">        &lt;context:exclude-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot; /&gt;</div><div class="line">    &lt;/context:component-scan&gt;</div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure>
<p>springmvc.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class="line">       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</div><div class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</div><div class="line">                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd&quot;&gt;</div><div class="line">    &lt;context:component-scan base-package=&quot;com.timothy.web.controller&quot; /&gt;</div><div class="line">    &lt;mvc:default-servlet-handler /&gt;</div><div class="line">    &lt;mvc:annotation-driven&gt;</div><div class="line">        &lt;!-- json转换器 --&gt;</div><div class="line">        &lt;mvc:message-converters&gt;</div><div class="line">            &lt;bean class=&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;&gt;</div><div class="line">                &lt;property name=&quot;supportedMediaTypes&quot;&gt;</div><div class="line">                    &lt;list&gt;</div><div class="line">                        &lt;value&gt;application/json&lt;/value&gt;</div><div class="line">                        &lt;value&gt;text/json&lt;/value&gt;</div><div class="line">                    &lt;/list&gt;</div><div class="line">                &lt;/property&gt;</div><div class="line">            &lt;/bean&gt;</div><div class="line">        &lt;/mvc:message-converters&gt;</div><div class="line">    &lt;/mvc:annotation-driven&gt;</div><div class="line"></div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure>
<ol>
<li>接下来做一个简单的 <strong>Controller</strong> 示例<br><strong>KotlinController的代码如下所示：</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">package com.timothy.web.controller</div><div class="line">import com.timothy.web.pojo.Person</div><div class="line">import com.timothy.web.service.KotlinService</div><div class="line">import org.springframework.beans.factory.annotation.Autowired</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping</div><div class="line"></div><div class="line">import org.springframework.web.bind.annotation.RestController</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by timothy on 2017/6/1.</div><div class="line"> */</div><div class="line">@RestController</div><div class="line">class KotlinController &#123;</div><div class="line">    @Autowired</div><div class="line">    private var kotlinService: KotlinService? = null</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private var person: Person? = null</div><div class="line"></div><div class="line">    @RequestMapping(&quot;/kotlin&quot;)</div><div class="line">    fun home() = mapOf(&quot;kotlin&quot; to kotlinService?.kotlin(), &quot;map&quot; to kotlinService?.map(), &quot;person&quot; to person)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>KotlinService代码：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">package com.timothy.web.service</div><div class="line"></div><div class="line">import org.springframework.stereotype.Service</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by timothy on 2017/6/1.</div><div class="line"> */</div><div class="line">@Service</div><div class="line">class KotlinService &#123;</div><div class="line">    fun kotlin() = &quot;kotlin&quot;</div><div class="line"></div><div class="line">    fun map() = mapOf(&quot;one&quot; to 1, &quot;two&quot; to 2, &quot;three&quot; to 3)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>bean代码</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">package com.timothy.web.pojo</div><div class="line"></div><div class="line">import org.springframework.stereotype.Component</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by timothy on 2017/6/1.</div><div class="line"> */</div><div class="line">@Component</div><div class="line">data internal class Person(var name: String? = &quot;timothy&quot;, var id: Int? = 1)</div></pre></td></tr></table></figure>
<p>效果如下：<br><img src="/images/kotlin/kotlin05.png" alt="image">    </p>
<h2 id="总结：可以看出，Kotlin-代替-Java-开发后端也对简单，在熟悉语法之后就可以上手，而且kotlin也兼容java的-的经典框架。同时，Kotlin-的一些新特性也让代码的简洁性和易读性有了一定程度的提高"><a href="#总结：可以看出，Kotlin-代替-Java-开发后端也对简单，在熟悉语法之后就可以上手，而且kotlin也兼容java的-的经典框架。同时，Kotlin-的一些新特性也让代码的简洁性和易读性有了一定程度的提高" class="headerlink" title="总结：可以看出，Kotlin 代替 Java 开发后端也对简单，在熟悉语法之后就可以上手，而且kotlin也兼容java的 的经典框架。同时，Kotlin 的一些新特性也让代码的简洁性和易读性有了一定程度的提高"></a>总结：<strong>可以看出，</strong>Kotlin<strong> 代替 </strong>Java<strong> 开发后端也对简单，在熟悉语法之后就可以上手，而且kotlin也兼容java的 的经典框架。同时，Kotlin 的一些新特性也让代码的简洁性和易读性有了一定程度的提高</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从Google I/O 大会上宣布 Kotlin 成为 Android 开发的官方语言，Kotlin 就吸引了很多人的目光，反正在家休息、研究了下，&lt;br&gt;整理成这篇博客来简单介绍下Kotlin。&lt;/p&gt;
&lt;h2 id=&quot;Kotlin的起源&quot;&gt;&lt;a href=&quot;#Kotl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>阿里云部署 Web 环境（LAMP）</title>
    <link href="http://91fz.org/2016/10/19/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B2lamp/"/>
    <id>http://91fz.org/2016/10/19/阿里云部署lamp/</id>
    <published>2016-10-18T16:00:00.000Z</published>
    <updated>2017-06-26T09:26:51.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阿里云部署-Web-环境（LAMP）"><a href="#阿里云部署-Web-环境（LAMP）" class="headerlink" title="阿里云部署 Web 环境（LAMP）"></a>阿里云部署 Web 环境（LAMP）</h1><p><strong>这里给大家介绍如何使用阿里云镜像，一键部署 Web 环境，包括安装 Nginx、MySQL、phpwind 和 phpMyAdmin。</strong><br>软件包中包含的软件及版本如下：<br><strong>nginx</strong>：1.4.4<br><strong>apache</strong>：2.2.29、2.4.10<br><strong>mysql</strong>：5.1.73、5.5.40、5.6.21<br><strong>php</strong>：5.2.17、5.3.29、5.4.23、5.5.7<br><strong>php 扩展</strong>：memcache、Zend Engine/OPcache<br><strong>jdk</strong>：1.7.0<br><strong>tomcat</strong>：7.0.54<br><strong>ftp</strong>：（yum/apt-get 安装）<br><strong>phpwind</strong>：8.7 GBK<br><strong>phpmyadmin</strong>：4.1.8   </p>
<h2 id="说明：这是写文档时参考的软件版本。您下载的版本可能与此不同。"><a href="#说明：这是写文档时参考的软件版本。您下载的版本可能与此不同。" class="headerlink" title="说明：这是写文档时参考的软件版本。您下载的版本可能与此不同。   "></a><strong>说明：这是写文档时参考的软件版本。您下载的版本可能与此不同。</strong>   </h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>部署之前，请确保：</li>
<li>您的实例可以连接公网。</li>
<li>已经安装用于连接 Linux 实例的工具，如 <a href="http://www.netsarang.com/products/xsh_overview.html/" target="_blank" rel="external">Xshell</a> 和 <a href="http://www.netsarang.com/products/xfp_overview.html" target="_blank" rel="external">Xftp</a>。本文将以这两个工具为例介绍操作步骤。</li>
<li><strong>注意</strong>：阿里云 <strong>Linux</strong> 一键安装 Web 环境安装包暂不支持自动挂载 I/O 优化的数据盘。</li>
</ul>
<hr>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>在浏览器中打开阿里云的云市场。<br>搜索 阿里云<strong>linux</strong>一键安装<strong>web</strong>环境，然后购买该软件。<br>登录云服务器管理控制台。打开 <strong>产品与服务</strong>&gt; <strong>云市场</strong>。<br>单击 <strong>已购买的服务</strong>。在 <strong>阿里云Linux一键安装Web环境</strong>的右侧，单击 <strong>管理</strong>。<br>点击 <strong>下载地址</strong>，一键下载<strong>安装包</strong>。<br>解压缩安装包。文件夹名称为<strong>sh-1.5.5</strong>。<br><strong>说明</strong>：这是写文档时参考的文件夹名称，您下载的版本可能与此不同。<br>确保您安装了连接 Linux 实例的工具，如 Xshell 和 Xftp。<br>打开 Xshell，设置登录实例所需的信息。<br>设置连接名称。<br>协议选择 <strong>SSH</strong>。<br>输入主机公网 IP 地址。<br>端口号填 <strong>22</strong>。<br>然后单击 确定 <strong>保存</strong>。<br><img src="/images/aliyun/Imageali.png" alt="image"><br>单击左侧导航中的 <strong>连接</strong> &gt; <strong>用户身份验证</strong>，验证方法选择 <strong>Password</strong>，然后输入用户名<strong>root</strong> 和<strong>登录密码</strong>。<br><img src="/images/aliyun/Imageali01.png" alt="image">   </p>
<p>单击 <strong>Xshell </strong>工具栏的<strong> Xftp </strong>图标 （新建文件传输），或使用快捷键<strong> CTRL + ALT + F</strong> 打开<strong>Xftp</strong>。<br><img src="/images/aliyun/Imageali02.png" alt="image"><br>然后通过 <strong>Xftp</strong> 上传一键安装包文件，直接按住左侧的本地安装文件夹，拖放到右侧 <strong>Linux</strong> 实例的目录下。<br><img src="/images/aliyun/Imageali03.png" alt="image"><br>回到 <strong>Xshell</strong> 的链接界面，依次键入以下安装命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chmod -R 777 sh-1.5.5</div><div class="line">cd sh-1.5.5</div><div class="line">./install.sh</div></pre></td></tr></table></figure>
<p><img src="/images/aliyun/Imageali04.png" alt="image">  </p>
<p>安装完成后执行 <strong>cat</strong> <strong>account.log </strong>命令，可以查看 <strong>account.log</strong> 文件，数据库密码在里面.   根据需要选择    1 (<strong>nginx</strong>) 或者 2 (<strong>apache</strong>)。<br>如直接回车，或输入错误字符，则默认选择 <strong>nginx</strong>。在示例中，此处选择 2。<br>注意：如果要使用 Java 环境（安装 <strong>tomcat+JDK</strong>），必须选择 nginx 服务器。<br>依次选择要安装的 <strong>nginx</strong> 或 <strong>Apache</strong> 版本、<strong>PHP</strong> 版本、<strong>MySQL</strong> 版本。<strong>nginx</strong> 和 <strong>PHP</strong> 建议选择最新的版本。<br><strong>注意</strong>：<strong>MySQL</strong> 建议选择 <strong>5.5.40</strong>，不要选择最新版本，否则可能无法正常使用。</p>
<p><img src="/images/aliyun/Imageali05.png" alt="image">  </p>
<p>输入 <strong>y</strong> 开始安装。一般需要半个小时左右安装完毕。看到下面这个界面，就表示安装顺利完成了<br><img src="/images/aliyun/Imageali06.png" alt="image">  </p>
<p>检查安装结果，输入下面的命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -tunpl</div></pre></td></tr></table></figure></p>
<p>-端口与服务信息如下：<br>-9000：PHP进程服务。如果安装的是Apache，则没有此端口。<br>-3306：MySQL服务<br>-80：HTTPD 或者 nginx 服务<br>-21：FTP服务<br><img src="/images/aliyun/Imageali07.png" alt="image"><br>输入以下命令，查看默认的 FTP 和 MySQL 的账号信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat account.log</div></pre></td></tr></table></figure></p>
<p>输入该命令后，系统会在屏幕上显示 <strong>FTP</strong> 和 <strong>MySQL</strong> 的用户名和密码。其中 FTP 的用户名是 <strong>www</strong>，MySQL 的用户名是 <strong>root</strong>。<br> <img src="/images/aliyun/Imageali08.png" alt="image"><br> 修改 FTP 密码：用 root 登录，执行下列命令，然后输入您的 FTP 新密码:<br> <img src="/images/aliyun/Imageali18.png" alt="image"><br> 修改 <strong>MySQL</strong> 密码。<br><strong>注意</strong>： <strong>-p 和旧密码之间没有空格</strong>；而 <strong>password</strong> 和新密码之间有空格 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqladmin -uroot -p旧密码 password 新密码</div></pre></td></tr></table></figure>
<p>  输入命令 cat /alidata/website-info.log，查看刚才安装软件的版本信息。至此所有配置结束。 </p>
<p> <img src="/images/aliyun/Imageali09.png" alt="image"><br> 安装 phpwind 和 phpMyAdmin。可以通过访问一键安装包默认安装的 phpwind 进行安装。直接在浏览器中输入您的域名或者 IP。如果是第一次访问 phpwind，系统会自动跳转到安装页面。单击 接受 进行安装。   </p>
<p>  <img src="/images/aliyun/Imageali10.png" alt="image"> </p>
<p>  在创建数据页面，单击 下一步。<br>  <img src="/images/aliyun/Imageali11.png" alt="image">    </p>
<p>  选择数据库类型为 MySQL，数据库用户名和密码填写 account.log 中的用户名和刚修改过的密码。然后设置数据库名称、管理员账号和密码等信息。单击 下一步。系统会自动安装。</p>
<p>  <img src="/images/aliyun/Imageali12.png" alt="image"><br>  接下来访问 phpMyAdmin。在浏览器中输入域名，或者 IP/phpmyadmin 路径 （如 <a href="http://127.0.0.1/phpmyadmin" target="_blank" rel="external">http://127.0.0.1/phpmyadmin</a> ），访问 phpMyAdmin。输入 MySQL 用户名和密码，然后单击 执行，即可登录。</p>
<p>  <img src="/images/aliyun/Imageali13.png" alt="image"><br>  从 phpMyAdmin 即可操作 MySQL。可以创建博客使用的数据库。输入数据库名称，然后排序规则选择 utf8_general_ci，单击 创建。<br>    <img src="/images/aliyun/Imageali14.png" alt="image"><br>    恭喜您！您已经成功部署了 Web 环境，可以开始制作和发布自己的站点了。</p>
<h2 id="卸载一键安装包"><a href="#卸载一键安装包" class="headerlink" title="卸载一键安装包"></a><strong>卸载一键安装包</strong></h2><p>如果需要卸载一键安装包，执行下列命令： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chmod 777 -R sh-1.5.5</div><div class="line">cd sh-1.5.5</div><div class="line">./uninstall.sh</div></pre></td></tr></table></figure>
<p><img src="/images/aliyun/Imageali15.png" alt="image"><br><img src="/images/aliyun/Imageali16.png" alt="image"><br><img src="/images/aliyun/Imageali17.png" alt="image"> </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;阿里云部署-Web-环境（LAMP）&quot;&gt;&lt;a href=&quot;#阿里云部署-Web-环境（LAMP）&quot; class=&quot;headerlink&quot; title=&quot;阿里云部署 Web 环境（LAMP）&quot;&gt;&lt;/a&gt;阿里云部署 Web 环境（LAMP）&lt;/h1&gt;&lt;p&gt;&lt;stron
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>QQ实用技术（从以前的博客拿过来的2011年手机写的 纯粹怀旧）</title>
    <link href="http://91fz.org/2015/08/11/QQ%E6%8A%80%E6%9C%AF/"/>
    <id>http://91fz.org/2015/08/11/QQ技术/</id>
    <published>2015-08-10T16:00:00.000Z</published>
    <updated>2017-06-26T10:33:43.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QQ实用技术（从以前的博客拿过来的2011年手机写的-纯粹怀旧）"><a href="#QQ实用技术（从以前的博客拿过来的2011年手机写的-纯粹怀旧）" class="headerlink" title="QQ实用技术（从以前的博客拿过来的2011年手机写的 纯粹怀旧）"></a>QQ实用技术（从以前的博客拿过来的2011年手机写的 纯粹怀旧）</h1><h2 id="首先，我给大家介绍几种下盗号有哪几种方法，然后在讲解防范措施！！"><a href="#首先，我给大家介绍几种下盗号有哪几种方法，然后在讲解防范措施！！" class="headerlink" title="首先，我给大家介绍几种下盗号有哪几种方法，然后在讲解防范措施！！"></a>首先，我给大家介绍几种下盗号有哪几种方法，然后在讲解防范措施！！</h2><h3 id="盗取QQ的方式有"><a href="#盗取QQ的方式有" class="headerlink" title="盗取QQ的方式有"></a><strong>盗取QQ的方式有</strong></h3><ul>
<li>(1)<strong>远程木马盗号</strong>   </li>
<li><strong>(2)强制破解</strong></li>
<li><strong>(3)键盘纪录</strong>   </li>
<li><p><strong>(4)钓鱼网站，</strong><br>-<strong>(5)恶意申诉</strong></p>
<h4 id="第一种方法《远程木马盗号》"><a href="#第一种方法《远程木马盗号》" class="headerlink" title="第一种方法《远程木马盗号》"></a>第一种方法《远程木马盗号》</h4><p>远程木马盗号的软件有“<strong>盗Q黑侠</strong>，<strong>广外幽灵</strong>，<strong>QQ机器人</strong>，<strong>QQ远程攻击器</strong>，<strong>QQ流感</strong>，<strong>阿拉QQ大盗</strong>，<strong>QQ explorer</strong> <strong>QQ密码使者</strong>等， 它们的使用都差不多。<br>我用的是QQ邮箱收信，去邮箱设置里把软件地址设为白名单，例如:gzf@qinan.me，然后填写收件地址(这个区别前面的是要盗的号的邮箱)。还有发件地址(就是你收密码和发邮件的邮箱).   </p>
</li>
<li><p><strong>第二步</strong>，生成木马(这个是软件自带)   </p>
</li>
<li><p><strong>第三步</strong>  相当重要，重命名该木马，取一个吸引人的名字，例如:美女裸照，然后修改后缀(这个可以百度搜软件)，木马一般都是可运行程序，<strong>后缀是exe</strong>，要骗警惕的人不容易，那我们可以把他换成图片后缀(<strong>jpg</strong>，<strong>gif</strong>，等)音乐后缀(mp3，wma等)视频后缀(mp4，Avi，flv，mrvb，等)     </p>
</li>
<li><strong>第四步</strong>，发邮件，一般把木马藏在附件里面，然后等那人运行木马后，<strong>我们可以在邮箱里查看密码和IP</strong>，</li>
</ul>
<h4 id="第二种方法是《本地破解》"><a href="#第二种方法是《本地破解》" class="headerlink" title="第二种方法是《本地破解》"></a><strong>第二种方法是《本地破解》</strong></h4><p>这种成功率低的伤不起，之所以我用过，因为比较简单，就是用QQ暴力破解，下载词典，然后输入QQ号码，先猜可能的密码，例如:我确定某人的密码是纯数字，就选数字词典，然后就等待破解，<br>如果有字母就在词典里加字母就可以了。</p>
<h4 id="第三种《键盘纪录》"><a href="#第三种《键盘纪录》" class="headerlink" title="第三种《键盘纪录》"></a>第三种《键盘纪录》</h4><p>这种在网吧比较好用，下载键盘纪录软件(一定要能躲过还原精灵的那种，如果家庭电脑就没必要)注意点有二，第一要安装正确，二记住键盘输入纪录所在文件夹，这个是最简单的，可以直接查看。但是，如果用软件盘输入它就无能为力了！嘿嘿！   </p>
<h4 id="第四种就是《恶意申诉》"><a href="#第四种就是《恶意申诉》" class="headerlink" title="第四种就是《恶意申诉》"></a>第四种就是《恶意申诉》</h4><p>这个成功油水肥，可以改密保问题，是我常用的一种，申诉大家都会，不多说，注意点有，你必须有2个以上的小号，加的目标号码时间越长成功率越高，三不知道的不要乱猜，据我的经验，一般申请的都是网页免费申请，不多说，具体操作，自己把握，<br>第五钓鱼网站，这个从去年开始比较流行，现在中毒转发减肥和色 情聊天的都是这么中毒的，这个需要熟悉网站制作，要求比较高，比较麻烦，就不多说！</p>
<h5 id="下面我根据自己多年的经验给大家提点意见其实，防范木马盗号很简单"><a href="#下面我根据自己多年的经验给大家提点意见其实，防范木马盗号很简单" class="headerlink" title="下面我根据自己多年的经验给大家提点意见其实，防范木马盗号很简单"></a>下面我根据自己多年的经验给大家提点意见其实，防范木马盗号很简单</h5><h5 id="1，拒绝好奇心"><a href="#1，拒绝好奇心" class="headerlink" title="1，拒绝好奇心"></a>1，拒绝好奇心</h5><p>不要接收陌生人的离线文件，熟人不知道什么东西的情况下就也不乱接，包括邮件里面的附件。（尤其多人转发的那种邮件）</p>
<h5 id="2，IP代理"><a href="#2，IP代理" class="headerlink" title="2，IP代理"></a>2，IP代理</h5><p>再QQ登录框下面的高级设置里(找不到你的iP地址木马无法攻击)<br>键盘纪录防范，只要软键盘输入就行了，</p>
<h5 id="3，暴力破解防范"><a href="#3，暴力破解防范" class="headerlink" title="3，暴力破解防范"></a>3，暴力破解防范</h5><p>密码越复杂越好，你数字中加一个标点符号，破解难度就得翻几倍。</p>
<h5 id="4，恶意申诉"><a href="#4，恶意申诉" class="headerlink" title="4，恶意申诉"></a>4，恶意申诉</h5><p>只有一个办法，绑钉自己身份证(前提是别人不知道你的身份证号码和姓名)</p>
<h5 id="5，鱼肉，"><a href="#5，鱼肉，" class="headerlink" title="5，鱼肉，"></a>5，鱼肉，</h5><p>记住一句话就可以，天上不掉馅饼，掉陷井，不要去玩色 站，和黑基，开挂等。</p>
<h5 id="6看好友隐身和ip地址的软件"><a href="#6看好友隐身和ip地址的软件" class="headerlink" title="6看好友隐身和ip地址的软件"></a>6看好友隐身和ip地址的软件</h5><p>qq彩虹       赛博qq</p>
<h5 id="从初三玩-qq有6，7年了-以上就是我对各位童鞋的各种悲剧的一些建议！"><a href="#从初三玩-qq有6，7年了-以上就是我对各位童鞋的各种悲剧的一些建议！" class="headerlink" title="从初三玩 qq有6，7年了  以上就是我对各位童鞋的各种悲剧的一些建议！"></a>从初三玩 qq有6，7年了  以上就是我对各位童鞋的各种悲剧的一些建议！</h5><h3 id="（以前用手机写的-还记得是Mtk的，纯粹为了怀旧，以上软件用不了）"><a href="#（以前用手机写的-还记得是Mtk的，纯粹为了怀旧，以上软件用不了）" class="headerlink" title="（以前用手机写的 还记得是Mtk的，纯粹为了怀旧，以上软件用不了）"></a>（以前用手机写的 还记得是Mtk的，纯粹为了怀旧，以上软件用不了）</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;QQ实用技术（从以前的博客拿过来的2011年手机写的-纯粹怀旧）&quot;&gt;&lt;a href=&quot;#QQ实用技术（从以前的博客拿过来的2011年手机写的-纯粹怀旧）&quot; class=&quot;headerlink&quot; title=&quot;QQ实用技术（从以前的博客拿过来的2011年手机写的 纯
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装ZeroC-ICE</title>
    <link href="http://91fz.org/2015/08/10/%E5%AE%89%E8%A3%85Zero-ICE/"/>
    <id>http://91fz.org/2015/08/10/安装Zero-ICE/</id>
    <published>2015-08-09T16:00:00.000Z</published>
    <updated>2017-06-26T09:52:15.652Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-安装"><a href="#ubuntu-安装" class="headerlink" title="ubuntu 安装"></a>ubuntu 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">wget https://zeroc.com/download/GPG-KEY-zeroc-release sudo apt-key add GPG-KEY-zeroc-release sudo apt-add-repository &quot;deb http://zeroc.com/download/apt/ubuntu15.10 stable main&quot; sudo apt-get update sudo apt-get install zeroc-ice-all-runtime zeroc-ice-all-dev</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">wget https://zeroc.com/download/GPG-KEY-zeroc-release</div><div class="line">sudo apt-key add GPG-KEY-zeroc-release</div><div class="line">sudo apt-add-repository &quot;deb http://zeroc.com/download/apt/ubuntu15.10 stable main&quot;</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install zeroc-ice-all-runtime zeroc-ice-all-dev</div><div class="line">Ubuntu 15.04</div><div class="line"></div><div class="line">wget https://zeroc.com/download/GPG-KEY-zeroc-release</div><div class="line">sudo apt-key add GPG-KEY-zeroc-release</div><div class="line">sudo apt-add-repository &quot;deb https://zeroc.com/download/apt/ubuntu15.04 stable main&quot;</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install zeroc-ice-all-runtime zeroc-ice-all-dev</div><div class="line">Ubuntu 14.04</div><div class="line"></div><div class="line">wget https://zeroc.com/download/GPG-KEY-zeroc-release</div><div class="line">sudo apt-key add GPG-KEY-zeroc-release</div><div class="line">sudo apt-add-repository &quot;deb https://zeroc.com/download/apt/ubuntu14.04 stable main&quot;</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install zeroc-ice-all-runtime zeroc-ice-all-dev</div><div class="line">GPG Key</div><div class="line"></div><div class="line">The Linux binary distributions are signed with our release key.</div><div class="line">Fingerprint: DC66 ECCB 94F2 797F D4D4 ADA7 5E6D A833 0613 2997</div><div class="line">Sample Programs</div><div class="line"></div><div class="line">A collection of sample programs are available on GitHub. You can download them by running the following command:</div><div class="line">git clone -b 3.6 https://github.com/zeroc-ice/ice-demos.git</div><div class="line">Refer to GitHub&apos;s help page for more information.</div></pre></td></tr></table></figure>
<h2 id="centos-安装"><a href="#centos-安装" class="headerlink" title="centos 安装"></a>centos 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">   Install on Red Hat Enterprise Linux</div><div class="line"></div><div class="line">Documentation: Using the Linux Binary Distributions</div><div class="line">Includes: Runtime and SDK for Ice for C++, Java, PHP, and all Ice services.</div><div class="line">Red Hat Enterprise Linux 7</div><div class="line"></div><div class="line">Prerequisite: You may need to enable the RHEL 7 Server Optional repository for several dependencies.</div><div class="line">cd /etc/yum.repos.d</div><div class="line">sudo wget https://zeroc.com/download/rpm/zeroc-ice-el7.repo</div><div class="line">sudo yum install ice-all-runtime ice-all-devel</div><div class="line">Red Hat Enterprise Linux 6</div><div class="line"></div><div class="line">cd /etc/yum.repos.d</div><div class="line">sudo wget https://zeroc.com/download/rpm/zeroc-ice-el6.repo</div><div class="line">sudo yum install ice-all-runtime ice-all-devel</div><div class="line">GPG Key</div><div class="line"></div><div class="line">The Linux binary distributions are signed with our release key.</div><div class="line">Fingerprint: DC66 ECCB 94F2 797F D4D4 ADA7 5E6D A833 0613 2997</div><div class="line">Sample Programs</div><div class="line"></div><div class="line">A collection of sample programs are available on GitHub. You can download them by running the following command:</div><div class="line">git clone -b 3.6 https://github.com/zeroc-ice/ice-demos.git</div><div class="line">Refer to GitHub&apos;s help page for more information.</div></pre></td></tr></table></figure>
<p>** 下一篇介绍用法</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ubuntu-安装&quot;&gt;&lt;a href=&quot;#ubuntu-安装&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 安装&quot;&gt;&lt;/a&gt;ubuntu 安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://91fz.org/2015/01/19/hello-world/"/>
    <id>http://91fz.org/2015/01/19/hello-world/</id>
    <published>2015-01-18T16:00:00.000Z</published>
    <updated>2017-06-26T10:54:19.851Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>让国产山寨手机死机黑屏之imy</title>
    <link href="http://91fz.org/2011/11/15/imy/"/>
    <id>http://91fz.org/2011/11/15/imy/</id>
    <published>2011-11-14T16:00:00.000Z</published>
    <updated>2017-06-26T06:15:01.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="让国产山寨手机死机黑屏之imy"><a href="#让国产山寨手机死机黑屏之imy" class="headerlink" title="让国产山寨手机死机黑屏之imy"></a><strong>让国产山寨手机死机黑屏之imy</strong></h1><hr>
<p>IMY铃声是一段铃声代码文件，具有占有空间小、容易编辑等特点。中国移动规定其为通用彩信文件格式之一,可以用短信进行收发（当然不花流量咯！）。IMY标准非常灵活，音域跨了9个8度，24种不同音长；还可以加入振动、屏幕背光及来电灯亮灭的效果，给人以更加美妙神奇的音乐体验。</p>
<h2 id="怎样看你的手机是否支持IMY铃声？"><a href="#怎样看你的手机是否支持IMY铃声？" class="headerlink" title="　　怎样看你的手机是否支持IMY铃声？"></a>　　怎样看你的手机是否支持IMY铃声？</h2><p>　　短信编辑界面，选项——插入对象——我的铃声/预设铃声。（IMY铃声文件在短信中会以音符的图标显示。）<br>　　若能进行上述操作，则恭喜你，你的手机支持IMY;若“我的铃声”为空白，则你的手机闪存（人们习惯上将其错叫成“手机内存”）里的“audio”文件夹里没有IMY铃声。)
　　</p>
<h2 id="imy可传播手机病毒吗？"><a href="#imy可传播手机病毒吗？" class="headerlink" title="imy可传播手机病毒吗？"></a>imy可传播手机病毒吗？</h2><p>　　2008年11月以来，很多人收到了一些“黑屏短信”、“死机短信”、“狂振、狂闪短信”，这些短信是怎么做到的呢？又是不是病毒呢？<br>　　了解了IMY的本质，就不难回答上面的问题（请看上文加粗的文字）。这也正是“山寨机”容易中招的原因。<br>　　那些短信中包含有一些恶作剧的IMY铃声文件。以黑屏短信为例，这个IMY铃声文件不含声音代码，而只含有关闭背光、来电灯以及振动的命令（下面将会进一步详解），让人误认为是死机。笔者亲自试过，这个文件只会让手机黑屏73秒，并非真死，并且对手机无害。<br>　　IMY铃声调用的命令仅仅是声音指令、振动开启及关闭指令、屏幕背光和来电灯亮灭指令。所以并非病毒。虽不是病毒，但手机狂振、狂闪却应该是对手机有伤害的。<br>　　那么，如何删除带有这种恶作剧IMY铃声文件的短信呢？<br>　　　——调成静音模式，然后删除。原因是静音模式时，IMY铃声就不会播放，其中的恶作剧就不会得逞。呵呵~<br>　　还是强烈倡议大家“和平使用”IMY铃声。过犹不及嘛，恶作剧也应有个度。</p>
<h2 id="IMY铃声恶作剧例子"><a href="#IMY铃声恶作剧例子" class="headerlink" title="IMY铃声恶作剧例子"></a>IMY铃声恶作剧例子</h2><p>　　黑屏：<br>　<br>　　<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　BEGIN:IMELODY</div><div class="line">　　BEAT:1200</div><div class="line">　　MELODY:(ledoffbackoffvibeoffr5ledoffbackoffvibeoffr5@600)</div><div class="line">　　END:IMELODY</div></pre></td></tr></table></figure></p>
<p>　　狂震：<br>　<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">　　BEGIN:IMELODY</div><div class="line">　　VERSION:1.2</div><div class="line">　　FORMAT:CLASS1.0</div><div class="line">　　BEAT:100</div><div class="line">　　MELODY:(ledoffledonbackoffbackonvibeon@300)</div><div class="line">　　END:IMELODY</div></pre></td></tr></table></figure></p>
<p>　　振铃：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">　　BEGIN:IMELODY</div><div class="line">　　VERSION:1.2</div><div class="line">　　FORMAT:CLASS1.0</div><div class="line">　　BEAT:200</div><div class="line">　　MELODY:(ledoffbackoffvibeonr5vibeoffledonbackonr5@200)</div><div class="line">　　END:IMELODY</div></pre></td></tr></table></figure></p>
<h2 id="IMY铃声代码详解"><a href="#IMY铃声代码详解" class="headerlink" title="IMY铃声代码详解"></a>IMY铃声代码详解</h2><p>　　其实IMY铃声文件本无罪，所以大家不要被恶作剧吓到。<br>　　下面通过《生日快乐歌》的代码，来详细了解一下IMY代码格式。（两排#号间为要存储为<em>.imy文件中的内容；引号及其中间内容为代码解释，实际代码中没有；“MELODY旋律字符串”中的空格也是为了大家看的更明白而加上的）<br>　　<br>　　<em>*注意：代码一律用英文半角字符.</em></em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">　　BEGIN:IMELODY</div><div class="line">　　VERSION:1.2　“版本号”</div><div class="line">　　FORMAT:CLASS1.0　“格式编号。取值CLASS1.0或CLASS2.0，前者居多”</div><div class="line">　　NAME:HAPPY BIRTHDAY　“铃声名。可缺省”</div><div class="line">　　COMPOSER:MTK(13)　“演奏乐器。可缺省”</div><div class="line">　　BEAT:165　“节奏。取值从25到900bpm（拍/分钟），越大节奏越快，缺省值120”</div><div class="line">　　STYLE:S0　“风格。取值为S0；S1；S2；缺省值S0”</div><div class="line">　　VOLUME:V10　“音量。取值V0到V15。V0为静音，缺省值V7”</div><div class="line">　　MELODY:(*3a2 V+ a2 #f2 d2 #c2 *3b1 g2 #f2 d2 V- e2 vibeon ledon backoff d1 vibeoff ledoff backon @2)　“旋律字符串”</div><div class="line">　　END:IMELODY</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">“风格STYLE”中</div><div class="line">　　S0：普通。每音符间有暂停，音符与暂停时间比为20:1</div><div class="line">　　S1：持续。每音符间无暂停</div><div class="line">　　S2：断奏。音符与暂停时间比为1:1</div><div class="line">“旋律字符串MELODY”中的特效命令</div><div class="line">　　“vibeon”、“vibeoff” 分别为振动开启，停止命令；</div><div class="line">　　“ledoff”、“ledon” 分别为来电灯关闭、开启命令；</div><div class="line">　　“backoff”、“backon” 分别为屏幕背光关闭、开启命令；</div><div class="line">　　&quot;(&quot;+&lt;melody&gt;+&quot;@n)&quot; 为重复特效,n取值0到无穷（0为无限重复）</div><div class="line">“旋律字符串MELODY”中的音符格式</div><div class="line">　　&lt;音阶&gt;&lt;升降调&gt;&lt;具体唱名&gt;&lt;音长&gt;&lt;延时符&gt;</div><div class="line">　　&lt;音阶&gt;：取值 “*0”、“*2”、… “*8”；(a=55Hz) | (a=110Hz) | … | (a=14080 Hz) 缺省&quot;*4&quot;，代表标准音（小字一组a音为880Hz）。</div><div class="line">　　&lt;升降调&gt;：“#”代表升半音，d、g、a、c、f前可加“#”；</div><div class="line">　　“&amp;”代表降半音，d、g、a、b、e前可加“&amp;”。</div><div class="line">　　&lt;具体唱名&gt;：c、d、e、f、g、a、b。</div><div class="line">　　&lt;音长&gt;：数值&quot;0&quot; | &quot;1&quot; | &quot;2&quot; | &quot;3&quot; | &quot;4&quot; | &quot;5&quot;，分别为全音符、半音符、1/4音符...1/32音符。</div><div class="line">　　&lt;延时符&gt;：“.” | “:”| “;” ;延时符，1.5倍、1.75倍与2/3倍。</div><div class="line">“旋律字符串MELODY”中的休止符</div><div class="line">　　r0，r1，r2，r3，r4，r5；停顿时长分别为全音符、半音符、1/4音符...1/32音符 。</div><div class="line">　　其后同样可加延时符，如“r3.”。</div><div class="line">“旋律字符串MELODY”中音量控制</div><div class="line">　　V+，V-。</div></pre></td></tr></table></figure>
<h2 id="怎样获得imy铃声文件？"><a href="#怎样获得imy铃声文件？" class="headerlink" title="怎样获得imy铃声文件？"></a>怎样获得imy铃声文件？</h2><p>　   　可以DIY。网上有一些制作imy铃声的软件，可以用他们来DIY也可以用一些软件来将其他格式的音乐转换成imy格式。还可以在网上找一些代码的文本，复制到记事本里，把文件后缀”.txt”改成”.imy”，保存到手机闪存的“audio”文件夹里即可。</p>
<p>　　<br>  　<strong>OK，现在就用浪漫十足的IMY铃声来扮炫你的生活吧！！！</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;让国产山寨手机死机黑屏之imy&quot;&gt;&lt;a href=&quot;#让国产山寨手机死机黑屏之imy&quot; class=&quot;headerlink&quot; title=&quot;让国产山寨手机死机黑屏之imy&quot;&gt;&lt;/a&gt;&lt;strong&gt;让国产山寨手机死机黑屏之imy&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
